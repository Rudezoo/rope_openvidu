{"version":3,"sources":["Component/EnterExam_Student.jsx","Component/End.jsx","Component/Examing.jsx","Component/Make_Session.jsx","Component/Sharing.jsx","Component/Examing_fin.jsx","Component/LoginComponent.jsx","Component/SideMenu.jsx","Component/Home.jsx","Component/AddTest.jsx","Component/Video/OvVideo.jsx","Component/Video/UserVideoComponent.jsx","Component/Result.jsx","Component/Main.jsx","Component/RegisterComponent.jsx","Component/App.jsx","index.js"],"names":["OV","End","icon","SmileOutlined","title","OPENVIDU_SERVER_URL","docV","document","documentElement","EnterExam_Student","props","Text","Typography","useState","Visible","setVisible","StudentId","setStudentId","Name","setName","visibleContext","setvisibleContext","visibleTest","setvisibleTest","selectedTest","setselectedTest","eid","seteid","SessionIds","setSessionIds","Tests","setTests","visibleBtn","setvisibleBtn","Content","setContent","Time","setTime","mySessionID","setmySessionID","myUserName","setmyUserName","fileName","setFileName","session","setsession","setmainStreamManager","setpublisher","subscriber","setsubscriber","CanTestNow","setCanTestNow","getExamData","a","axios","get","then","res","temp","i","data","length","push","sessionID","catch","err","alert","getUserData","console","log","content","time","file","menu","onClick","key","map","v","Item","useEffect","window","addEventListener","onbeforeunload","removeEventListener","mySession","on","event","deleteSubscriber","stream","streamManager","getToken","token","connect","clientData","publisher","initPublisher","undefined","audioSource","videoSource","publishAudio","publishVideo","resolution","frameRate","insertMode","mirror","publish","error","code","message","leaveSession","subscribers","index","indexOf","splice","disconnect","sessionStorage","getItem","sessionId","Promise","resolve","reject","JSON","stringify","customSessionId","post","headers","Authorization","btoa","response","id","Object","assign","status","warn","confirm","location","createToken","style","backgroundColor","width","height","display","flexDirection","alignContent","justifyContent","visible","footer","centered","onFinish","values","sid","sname","color","name","label","rules","required","htmlType","className","bordered","top","left","Button","DownOutlined","overlay","marginTop","disabled","Math","round","OpenVidu","initSession","requestFullscreen","history","pathname","search","state","TestName","sName","pdfjs","GlobalWorkerOptions","workerSrc","version","PdfComponent","numPages","setnumPages","pageNumber","setpageNumber","selectedImagePath","onLoadSuccess","pageIndex","wrapperDivSize","scale","span","block","LeftOutlined","RightOutlined","Examing","Countdown","Statistic","deadline","Date","now","modalvisible","setmodalvisible","OnFinish","alignItems","onOk","onCancel","textAlign","type","value","float","Examing_fin","Dragger","Upload","fileList","setfileList","fileList2","setfileList2","prop1","multiple","action","beforeUpload","concat","prop2","meta","UploadFile","e","preventDefault","formData","FormData","forEach","append","header","hitory","actions","onRemove","tempList","InboxOutlined","LoginComp","username","setusername","password","setpassword","OnClick","user","pass","withCredentials","setItem","userId","isLogged","alignSelf","fontSize","fontWeight","LockOutlined","prefix","UserOutlined","placeholder","onChange","target","Password","to","SideMenu","memo","useLocation","icons","HomeOutlined","FileAddOutlined","VideoCameraOutlined","CheckOutlined","Links","selectedKey","setselectedKey","findIndex","String","mode","theme","selectedKeys","Home","Title","paddingTop","paddingLeft","margin","subTitle","paddingBottom","src","AddTest","prop","TextArea","Input","RangePicker","TimePicker","setFileList","setfileName","fileWarn","setfileWarn","fileTime","setfileTime","Times","setTimes","disabledBtn","setdisabledBtn","settimestring","contents","userID","layout","labelCol","wrapperCol","Buttonlayout","offset","Open","info","success","padding","strong","rows","order","timeString","moment","duration","diff","asSeconds","marginBottom","OpenViduVideoComponent","videoRef","useRef","addVideoElement","current","autoPlay","ref","UserVideoComponent","NickName","setNickName","parse","connection","Make_Session","mainStreamManager","sub","subscribe","delete","Result","setdata","getData","Setdata","cam_file","answer","result_file","getStudentData","columns","dataIndex","align","render","text","href","download","pagination","pageSize","scroll","y","dataSource","Main","match","Header","Layout","Footer","Sider","Menu","SubMenu","collapsed","setcollapsed","OnClickLogout","minHeight","TeamOutlined","collapsible","onCollapse","exact","path","component","RegisterComp","Passwrd","setPasswrd","PasswrdCheck","setPasswrdCheck","Correct","setCorrect","Id","setId","Email","setEmail","IdIn","setIdIn","passIn","setpassIn","NameIn","setNameIn","EmailIn","setEmailIn","OnClickBtn","email","size","Sharing","Publisher","handleMainVideoStream","App","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.d7f63327.chunk.js","sourcesContent":["import React, { useState ,useEffect} from 'react';\r\nimport { Modal, Button, Input, Form, Card, Typography, Dropdown, Menu } from 'antd';\r\nimport \"../css/EnterExam-Student.css\"\r\nimport { DownOutlined, UserOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\n\r\nimport { OpenVidu } from 'openvidu-browser';\r\n\r\n\r\n\r\n\r\nconst OPENVIDU_SERVER_URL = 'https://52.79.134.9/:4443';\r\nconst OPENVIDU_SERVER_SECRET = 'MY_SECRET';\r\n\r\nlet docV = document.documentElement;\r\nlet OV;\r\n\r\n\r\nconst EnterExam_Student = (props) => {\r\n\r\n    const { Text } = Typography;\r\n\r\n    const [Visible, setVisible] = useState(true);\r\n    const [StudentId, setStudentId] = useState('');\r\n    const [Name, setName] = useState('');\r\n\r\n    const [visibleContext, setvisibleContext] = useState(false);\r\n    const [visibleTest, setvisibleTest] = useState(false);\r\n\r\n    const [selectedTest, setselectedTest] = useState('시험을 선택하세요');\r\n    const [eid, seteid] = useState(0);\r\n\r\n    \r\n    const [SessionIds, setSessionIds] = useState([]);\r\n    const [Tests, setTests] = useState([]);\r\n\r\n    const [visibleBtn, setvisibleBtn] = useState(true);\r\n\r\n    const [Content, setContent] = useState('');\r\n    const [Time, setTime] = useState(0);\r\n\r\n    const [mySessionID, setmySessionID] = useState(\"\");\r\n    const [myUserName, setmyUserName] = useState(\"\");\r\n    const [fileName, setFileName] = useState();\r\n\r\n    const [session, setsession] = useState();\r\n    const [mainStreamManager, setmainStreamManager] = useState();\r\n    const [Publisher, setpublisher] = useState();\r\n    const [subscriber, setsubscriber] = useState([]);\r\n    const [CanTestNow, setCanTestNow] = useState(true);\r\n\r\n    const OnCancle = () => {\r\n        setVisible(false);\r\n    }\r\n\r\n    const getExamData = async () => {\r\n        await axios.get('http://52.79.134.9:5000/exam/lists', {})\r\n            .then((res) => {\r\n                let temp=[];\r\n                   for(let i=0;i<res.data.length;i++){\r\n                    temp.push(res.data[i].title);\r\n                } \r\n                setTests(temp);\r\n                temp=[];  \r\n                for(let i=0;i<res.data.length;i++){\r\n                    temp.push(res.data[i].sessionID);\r\n                } \r\n                setSessionIds(temp);\r\n                \r\n            }).catch((err) => alert(err));\r\n    }\r\n\r\n    const OnFinish = (values) => {\r\n        if (values.sid !== '' && values.sname !== '') {\r\n            setStudentId(values.sid);\r\n            setName(values.sname);\r\n            setVisible(false);\r\n            setvisibleTest(true);\r\n            getExamData();\r\n        }\r\n\r\n    };\r\n\r\n    const OnClickExamBtn = () => {\r\n        docV.requestFullscreen();\r\n        props.history.push({\r\n            pathname : \"/Examing\",\r\n            search : '',\r\n            state : {fileName : fileName, time : Time, TestName:selectedTest, sName : Name, sid :StudentId, eid:eid}\r\n        });\r\n\r\n    }\r\n\r\n    const getUserData=async()=>{\r\n        await axios.get('http://52.79.134.9:5000/exam/get/'+mySessionID, {})\r\n        .then((res) => {\r\n           console.log(res.data[0].content);\r\n            setContent(res.data[0].content);\r\n            setTime(res.data[0].time)\r\n            setFileName(res.data[0].file);\r\n            seteid(res.data[0].eid);\r\n            \r\n        }).catch((err) => alert(err));\r\n    }\r\n\r\n\r\n\r\n    const onClickMenu = ({key}) => { \r\n        setvisibleBtn(false);\r\n        setselectedTest(Tests[key]);\r\n        setmySessionID(SessionIds[key]);          \r\n    }\r\n\r\n    let menu = (\r\n        <Menu onClick={onClickMenu}>\r\n            {\r\n                Tests.map((v, i) => \r\n\r\n                    <Menu.Item key={i}>{v}</Menu.Item> \r\n                             \r\n                )\r\n            }\r\n        </Menu>\r\n\r\n    );\r\n\r\n \r\n\r\n    const OnSelectTest=()=>{\r\n        getUserData();\r\n        setvisibleTest(false);\r\n        setvisibleContext(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        window.addEventListener('beforeunload', onbeforeunload);\r\n        return (window.removeEventListener('beforeunload', onbeforeunload));\r\n        \r\n    });\r\n\r\n    useEffect(() => {\r\n        if (session) {\r\n            var mySession = session;\r\n            console.log(session);\r\n            // --- 3) Specify the actions when events take place in the session ---\r\n           \r\n            // On every new Stream received...\r\n            mySession.on('streamCreated', (event) => {\r\n\r\n        \r\n                // Subscribe to the Stream to receive it. Second parameter is undefined\r\n                // so OpenVidu doesn't create an HTML video by its own\r\n     /*            let sub = mySession.subscribe(event.stream, undefined);\r\n                let subscribers = subscriber;\r\n                subscribers.push(sub);\r\n\r\n                // Update the state with the new subscribers\r\n                setsubscriber(subscribers); */\r\n            });\r\n\r\n            // On every Stream destroyed...\r\n            mySession.on('streamDestroyed', (event) => {\r\n\r\n                // Remove the stream from 'subscribers' array\r\n                deleteSubscriber(event.stream.streamManager);\r\n            });\r\n \r\n            // --- 4) Connect to the session with a valid user token ---\r\n\r\n            // 'getToken' method is simulating what your server-side should do.\r\n            // 'token' parameter should be retrieved and returned by your own backend\r\n            getToken().then((token) => {\r\n                // First param is the token got from OpenVidu Server. Second param can be retrieved by every user on event\r\n                // 'streamCreated' (property Stream.connection.data), and will be appended to DOM as the user's nickname\r\n                mySession\r\n                    .connect(\r\n                        token,\r\n                        { clientData: myUserName },\r\n                    )\r\n                    .then(() => {\r\n\r\n                        // --- 5) Get your own camera stream ---\r\n\r\n                        // Init a publisher passing undefined as targetElement (we don't want OpenVidu to insert a video\r\n                        // element: we will manage it on our own) and with the desired properties\r\n                        let publisher = OV.initPublisher(undefined, {\r\n                            audioSource: undefined, // The source of audio. If undefined default microphone\r\n                            videoSource: \"screen\", // The source of video. If undefined default webcam\r\n                            publishAudio: false, // Whether you want to start publishing with your audio unmuted or not\r\n                            publishVideo: true, // Whether you want to start publishing with your video enabled or not\r\n                            resolution: '640x480', // The resolution of your video\r\n                            frameRate: 30, // The frame rate of your video\r\n                            insertMode: 'APPEND', // How the video is inserted in the target element 'video-container'\r\n                            mirror: false, // Whether to mirror your local video or not\r\n                        });\r\n\r\n                        // --- 6) Publish your stream ---\r\n\r\n                        mySession.publish(publisher);\r\n\r\n                        // Set the main video in the page to display our webcam and store our Publisher\r\n                        setmainStreamManager(publisher);\r\n                        setpublisher(publisher);\r\n\r\n                    })\r\n                    .catch((error) => {\r\n                        console.log('There was an error connecting to the session:', error.code, error.message);\r\n                    });\r\n            }); \r\n        }\r\n\r\n    }, [session]);\r\n\r\n    const onbeforeunload = (event) => {\r\n        leaveSession();\r\n    }\r\n\r\n    const handlerJoinSessionEvent = () => {\r\n        console.log('Join session');\r\n    }\r\n\r\n    const handlerLeaveSessionEvent = () => {\r\n        console.log('Leave session');\r\n        /* this.setState({\r\n            session: undefined,\r\n        }); */\r\n    }\r\n    const handlerErrorEvent = () => {\r\n        console.log('Leave session');\r\n    }\r\n\r\n    const handleMainVideoStream = (stream) => {\r\n        if (mainStreamManager !== stream) {\r\n            setmainStreamManager(stream);\r\n        }\r\n    }\r\n\r\n    const deleteSubscriber = (streamManager) => {\r\n        let subscribers = subscriber;\r\n        let index = subscribers.indexOf(streamManager, 0);\r\n        if (index > -1) {\r\n            subscribers.splice(index, 1);\r\n            setsubscriber(subscribers);\r\n        }\r\n    }\r\n\r\n    /*   const check = () => {\r\n          document.getElementById(\"check\").style.display = \"none\";\r\n      } */\r\n\r\n    const joinSession = (event) => {\r\n        OV = new OpenVidu();\r\n\r\n    \r\n\r\n        axios\r\n        .get(OPENVIDU_SERVER_URL + '/api/sessions/'+mySessionID, {\r\n            headers: {\r\n                Authorization: 'Basic ' + btoa('OPENVIDUAPP:' + OPENVIDU_SERVER_SECRET),\r\n                'Content-Type': 'application/json',\r\n            },\r\n        })\r\n        .then((response) => {\r\n\r\n            setsession(OV.initSession());\r\n            setCanTestNow(false);\r\n                \r\n        }).catch((err)=> alert(\"Not yet\"));\r\n \r\n    \r\n\r\n    }\r\n    const leaveSession = () => {\r\n\r\n        // --- 7) Leave the session by calling 'disconnect' method over the Session object ---\r\n\r\n        const mySession = session;\r\n\r\n        if (mySession) {\r\n            mySession.disconnect();\r\n        }\r\n\r\n        // Empty all properties...\r\n        OV = null;\r\n        setsession();\r\n        setsubscriber([]);\r\n        setmySessionID(sessionStorage.getItem(\"sessionID\"));\r\n        setmyUserName('Professor');\r\n        setmainStreamManager(undefined);\r\n        setpublisher(undefined);\r\n\r\n    }\r\n\r\n\r\n    const createSession = (sessionId) => {\r\n        return new Promise((resolve, reject) => {\r\n            var data = JSON.stringify({ customSessionId: sessionId });\r\n            axios\r\n                .post(OPENVIDU_SERVER_URL + '/api/sessions', data, {\r\n                    headers: {\r\n                        Authorization: 'Basic ' + btoa('OPENVIDUAPP:' + OPENVIDU_SERVER_SECRET),\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                })\r\n                .then((response) => {\r\n                    console.log('CREATE SESION', response);\r\n                    resolve(response.data.id);\r\n                })\r\n                .catch((response) => {\r\n                    var error = Object.assign({}, response);\r\n                    if (error.response && error.response.status === 409) {\r\n                        resolve(sessionId);\r\n                    } else {\r\n                        console.log(error);\r\n                        console.warn(\r\n                            'No connection to OpenVidu Server. This may be a certificate error at ' + OPENVIDU_SERVER_URL,\r\n                        );\r\n                        if (\r\n                            window.confirm(\r\n                                'No connection to OpenVidu Server. This may be a certificate error at \"' +\r\n                                OPENVIDU_SERVER_URL +\r\n                                '\"\\n\\nClick OK to navigate and accept it. ' +\r\n                                'If no certificate warning is shown, then check that your OpenVidu Server is up and running at \"' +\r\n                                OPENVIDU_SERVER_URL +\r\n                                '\"',\r\n                            )\r\n                        ) {\r\n                            window.location.assign(OPENVIDU_SERVER_URL + '/accept-certificate');\r\n                        }\r\n                    }\r\n                });\r\n        });\r\n    }\r\n\r\n    const createToken = (sessionId) => {\r\n        return new Promise((resolve, reject) => {\r\n            var data = JSON.stringify({ session: sessionId });\r\n            axios\r\n                .post(OPENVIDU_SERVER_URL + '/api/tokens', data, {\r\n                    headers: {\r\n                        Authorization: 'Basic ' + btoa('OPENVIDUAPP:' + OPENVIDU_SERVER_SECRET),\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                })\r\n                .then((response) => {\r\n                    console.log('TOKEN', response);\r\n                    resolve(response.data.token);\r\n                })\r\n                .catch((error) => reject(error));\r\n        });\r\n    }\r\n\r\n    const getToken = () => {\r\n        return createSession(mySessionID).then((sessionId) => createToken(sessionId));\r\n    }\r\n\r\n    const OnClickSharingBtn = () => {\r\n        setmyUserName(StudentId+\"/\"+Name);\r\n        joinSession();\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <div style={{\r\n\r\nbackgroundColor: \"gray\",\r\nwidth: \"100vw\",\r\nheight: \"100vh\",\r\ndisplay: \"flex\",\r\nflexDirection:'column',\r\nalignContent:\"center\",\r\njustifyContent: \"center\"\r\n}}>\r\n                <Modal visible={Visible}\r\n\r\n                    title=\"정보 입력\"\r\n                    footer={[\r\n\r\n                    ]}\r\n                    centered\r\n\r\n                >\r\n                    <Form onFinish={OnFinish} >\r\n                        <Form.Item>\r\n                            <Text style={{\r\n                                color: \"gray\"\r\n                            }}>제출 전 반드시 인적사항을 확인해주세요!</Text>\r\n                        </Form.Item>\r\n\r\n\r\n                        <Form.Item name=\"sid\" label=\"학번\" rules={[{ required: true, message: '학번을 입력하세요!' }]}>\r\n                            <Input></Input>\r\n                        </Form.Item>\r\n                        <Form.Item name=\"sname\" label=\"이름\" rules={[{ required: true, message: '이름을 입력하세요!' }]}>\r\n                            <Input ></Input>\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button key=\"back\" onClick={OnCancle}>취소</Button>\r\n                            <Button key=\"submit\" htmlType=\"submit\">제출</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n\r\n                {visibleTest === true ?\r\n                    <div className=\"enterexam-background\">\r\n                        <Card title=\"*시험 선택*\" bordered=\"false\" style={{\r\n                            top: \"30%\",\r\n                            left: \"35%\",\r\n                            width: 500,\r\n                            height: 400,\r\n\r\n                        }}>\r\n\r\n                            <p>\r\n                                인적사항\r\n                        </p>\r\n                            <p>\r\n                                학번 : {StudentId}\r\n                            </p>\r\n                            <p>\r\n                                이름 : {Name}\r\n                            </p>\r\n\r\n                            <div>\r\n                                <Dropdown.Button icon={<DownOutlined/>} overlay={menu}>\r\n                                    {selectedTest}\r\n                                </Dropdown.Button>\r\n                            </div>\r\n                            <div style={{\r\n                                marginTop:20\r\n                            }}>\r\n                                <Button disabled={visibleBtn} onClick={OnSelectTest}>선택</Button>\r\n                            </div>\r\n\r\n                                \r\n                            \r\n\r\n                        </Card>\r\n\r\n                    </div> : ' '}\r\n\r\n                {visibleContext === true ?\r\n                    <div className=\"enterexam-background\">\r\n                        <Card title=\"※주의사항※\" bordered=\"false\" style={{\r\n                            top: \"30%\",\r\n                            left: \"35%\",\r\n                            width: 500,\r\n                            height: 400,\r\n\r\n                        }}>\r\n\r\n                            <p>\r\n                            {selectedTest}\r\n                        </p>\r\n                        <p>\r\n                            시험 시간 : {Math.round(Time/60) } 분\r\n                        </p>\r\n                            <p>\r\n                                학번 : {StudentId}\r\n                            </p>\r\n                            <p>\r\n                                이름 : {Name}\r\n                            </p>\r\n                            <p> {/* 여기서 서버에서 주의사항을 받아온다 */}\r\n                            {Content}\r\n                    </p>\r\n                            <Button onClick={OnClickSharingBtn}>화면 공유하기</Button>\r\n                            <br>\r\n                            </br>\r\n                            <br>\r\n                            </br>\r\n                            <Button onClick={OnClickExamBtn} disabled={CanTestNow}>시험 시작</Button>\r\n                        </Card>\r\n\r\n                    </div> : ' '}\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EnterExam_Student;","import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nimport { Result } from 'antd';\r\nimport { SmileOutlined } from '@ant-design/icons';\r\n\r\nconst End = () => {\r\n\r\n    return (\r\n        <>\r\n            <Result\r\n                icon={<SmileOutlined />}\r\n                title=\"수고하셨습니다!\"\r\n            >\r\n\r\n            </Result>\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default End;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Modal, Button, Row, Col, Card, Carousel, Statistic } from 'antd';\r\nimport { LeftOutlined, RightOutlined } from '@ant-design/icons';\r\nimport { pdfjs, Document, Page } from 'react-pdf'\r\n\r\n\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = '//cdnjs.cloudflare.com/ajax/libs/pdf.js/' + pdfjs.version + '/pdf.worker.js';\r\n\r\nconst Examing = (props) => {\r\n\r\n    const { Countdown } = Statistic;\r\n\r\n    const deadline = Date.now() + props.location.state.time * 1000; // \r\n\r\n    const [modalvisible, setmodalvisible] = useState(false);\r\n\r\n    const OnFinish = () => {\r\n\r\n        console.log(\"fin\");\r\n\r\n\r\n        props.history.push({\r\n            pathname: '/Examing_fin',\r\n            state: { sName: props.location.state.sName, sid: props.location.state.sid, eid: props.location.state.eid }\r\n        });\r\n\r\n    }\r\n\r\n    const OnExitEarly = () => {\r\n        setmodalvisible(true);\r\n    }\r\n\r\n\r\n    const Onquit=()=>{\r\n        setmodalvisible(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{\r\n\r\n                backgroundColor: \"gray\",\r\n                width: \"100vw\",\r\n                height: \"100vh\",\r\n                display: \"flex\",\r\n                flexDirection: 'column',\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\"\r\n            }}>\r\n\r\n                <div>\r\n                    <Modal title=\"시험 조기 종료\"\r\n                        visible={modalvisible}\r\n                        onOk={OnFinish}\r\n                        onCancel={Onquit}>\r\n\r\n                        <p>\r\n                            시험을 지금 종료합니까?\r\n                        </p>\r\n\r\n                        </Modal>\r\n                </div>\r\n\r\n\r\n\r\n                <div>\r\n                    <Card title={props.location.state.TestName} bordered={true} style={{\r\n                        textAlign: \"center\"\r\n                    }}>\r\n                        <Button style={{\r\n                            height: 100\r\n                        }} type=\"ghost\"><Countdown title=\"Countdown\" value={deadline} onFinish={OnFinish} /></Button>\r\n                        <div style={{\r\n                            float:\"right\"\r\n                        }}>\r\n\r\n                            <Button onClick={OnExitEarly}>시험 조기 종료</Button>\r\n                        </div>\r\n\r\n                        \r\n                        <PdfComponent location={props.location} />\r\n                    </Card>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nconst PdfComponent = (props) => {\r\n    const [numPages, setnumPages] = useState(null);\r\n    const [pageNumber, setpageNumber] = useState(0);\r\n    const [selectedImagePath, setselectedImagePath] = useState('../uploads/pdfs/' + props.location.state.fileName);\r\n\r\n\r\n    const onDocumentLoadSucess = ({ numPages }) => {\r\n        setnumPages(numPages);\r\n        console.log(\"sucess\")\r\n    }\r\n\r\n    const OnPageback = () => {\r\n        if (pageNumber - 1 >= 0) {\r\n            setpageNumber(pageNumber - 1);\r\n        }\r\n\r\n    }\r\n\r\n    const OnPagenext = () => {\r\n        if (pageNumber + 1 < numPages) {\r\n            setpageNumber(pageNumber + 1);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Document\r\n                file={selectedImagePath}\r\n                onLoadSuccess={onDocumentLoadSucess}\r\n            >\r\n                <Page pageIndex={pageNumber} width={props.wrapperDivSize} scale={1} />\r\n            </Document>\r\n            <Row>\r\n                <Col span={12}>\r\n                    <div className=\"site-button-ghost-wrapper\">\r\n                        <Button onClick={OnPageback} block><LeftOutlined />{pageNumber}</Button>\r\n                    </div>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <div>\r\n                        <Button onClick={OnPagenext} block>{pageNumber + 1}<RightOutlined /></Button>\r\n                    </div>\r\n                </Col>\r\n\r\n\r\n            </Row>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Examing;","import React, { useEffect, useState } from 'react';\r\n\r\nimport axios from 'axios';\r\nimport { OpenVidu } from 'openvidu-browser';\r\nimport UserVideoComponent from './Video/UserVideoComponent';\r\nimport { Form, Input, Button, Checkbox, Typography, Divider, Space } from 'antd';\r\n\r\n\r\nconst OPENVIDU_SERVER_URL = 'https://52.79.134.9:4443';\r\nconst OPENVIDU_SERVER_SECRET = 'MY_SECRET';\r\n\r\nlet OV;\r\n\r\nconst Make_Session = (props) => {\r\n\r\n\r\n\r\n    const [mySessionID, setmySessionID] = useState(sessionStorage.getItem(\"sessionID\"));\r\n    const [myUserName, setmyUserName] = useState(\"Professor\");\r\n\r\n    const [session, setsession] = useState();\r\n    const [mainStreamManager, setmainStreamManager] = useState();\r\n    const [Publisher, setpublisher] = useState();\r\n    const [subscriber, setsubscriber] = useState([]);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('beforeunload', onbeforeunload);\r\n        return (window.removeEventListener('beforeunload', onbeforeunload));\r\n    });\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (session) {\r\n            var mySession = session;\r\n\r\n            // --- 3) Specify the actions when events take place in the session ---\r\n\r\n            // On every new Stream received...\r\n            mySession.on('streamCreated', (event) => {\r\n                // Subscribe to the Stream to receive it. Second parameter is undefined\r\n                // so OpenVidu doesn't create an HTML video by its own\r\n\r\n\r\n                var sub = mySession.subscribe(event.stream, undefined);\r\n                var subscribers = subscriber;\r\n                subscribers.push(sub);\r\n                // Update the state with the new subscribers\r\n                setsubscriber([...subscriber, subscribers]);\r\n            });\r\n\r\n            // On every Stream destroyed...\r\n            mySession.on('streamDestroyed', (event) => {\r\n\r\n                // Remove the stream from 'subscribers' array\r\n                deleteSubscriber(event.stream.streamManager);\r\n            });\r\n\r\n            // --- 4) Connect to the session with a valid user token ---\r\n\r\n            // 'getToken' method is simulating what your server-side should do.\r\n            // 'token' parameter should be retrieved and returned by your own backend\r\n            getToken().then((token) => {\r\n                // First param is the token got from OpenVidu Server. Second param can be retrieved by every user on event\r\n                // 'streamCreated' (property Stream.connection.data), and will be appended to DOM as the user's nickname\r\n                mySession\r\n                    .connect(\r\n                        token,\r\n                        { clientData: myUserName },\r\n                    )\r\n                    .then(() => {\r\n\r\n                        // --- 5) Get your own camera stream ---\r\n\r\n                        // Init a publisher passing undefined as targetElement (we don't want OpenVidu to insert a video\r\n                        // element: we will manage it on our own) and with the desired properties\r\n                        let publisher = OV.initPublisher(undefined, {\r\n                            audioSource: undefined, // The source of audio. If undefined default microphone\r\n                            videoSource: undefined, // The source of video. If undefined default webcam\r\n                            publishAudio: false, // Whether you want to start publishing with your audio unmuted or not\r\n                            publishVideo: true, // Whether you want to start publishing with your video enabled or not\r\n                            resolution: '640x480', // The resolution of your video\r\n                            frameRate: 30, // The frame rate of your video\r\n                            insertMode: 'APPEND', // How the video is inserted in the target element 'video-container'\r\n                            mirror: false, // Whether to mirror your local video or not\r\n                        });\r\n\r\n                        // --- 6) Publish your stream ---\r\n\r\n                        mySession.publish(publisher);\r\n\r\n                        // Set the main video in the page to display our webcam and store our Publisher\r\n                        setmainStreamManager(publisher);\r\n                        setpublisher(publisher);\r\n                        console.log(session);\r\n                    })\r\n                    .catch((error) => {\r\n                        console.log('There was an error connecting to the session:', error.code, error.message);\r\n                    });\r\n            });\r\n        }\r\n\r\n    }, [session]);\r\n\r\n    const onbeforeunload = (event) => {\r\n        leaveSession();\r\n    }\r\n\r\n    const handlerJoinSessionEvent = () => {\r\n        console.log('Join session');\r\n    }\r\n\r\n    const handlerLeaveSessionEvent = () => {\r\n        console.log('Leave session');\r\n        /* this.setState({\r\n            session: undefined,\r\n        }); */\r\n    }\r\n    const handlerErrorEvent = () => {\r\n        console.log('Leave session');\r\n    }\r\n\r\n    const handleMainVideoStream = (stream) => {\r\n        if (mainStreamManager !== stream) {\r\n            setmainStreamManager(stream);\r\n        }\r\n    }\r\n\r\n    const deleteSubscriber = (streamManager) => {\r\n        let subscribers = subscriber;\r\n        let index = subscribers.indexOf(streamManager, 0);\r\n        if (index > -1) {\r\n            subscribers.splice(index, 1);\r\n            setsubscriber(subscribers);\r\n        }\r\n    }\r\n\r\n    /*   const check = () => {\r\n          document.getElementById(\"check\").style.display = \"none\";\r\n      } */\r\n\r\n    const joinSession = (event) => {\r\n        OV = new OpenVidu();\r\n\r\n        // --- 2) Init a session ---\r\n\r\n        setsession(OV.initSession())\r\n\r\n    }\r\n    const leaveSession = () => {\r\n\r\n        // --- 7) Leave the session by calling 'disconnect' method over the Session object ---\r\n\r\n        const mySession = session;\r\n\r\n        if (mySession) {\r\n            axios\r\n                .delete(OPENVIDU_SERVER_URL + '/api/sessions/' + mySessionID, {\r\n                    headers: {\r\n                        Authorization: 'Basic ' + btoa('OPENVIDUAPP:' + OPENVIDU_SERVER_SECRET),\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                })\r\n                .then((response) => {\r\n                    console.log(response);\r\n\r\n                })\r\n                .catch((error) => console.log(error));\r\n        }\r\n\r\n        // Empty all properties...\r\n        OV = null;\r\n        setsession();\r\n        setsubscriber([]);\r\n        setmySessionID(sessionStorage.getItem(\"sessionID\"));\r\n        setmyUserName('Professor');\r\n        setmainStreamManager(undefined);\r\n        setpublisher(undefined);\r\n\r\n    }\r\n\r\n\r\n    const createSession = (sessionId) => {\r\n        return new Promise((resolve, reject) => {\r\n            var data = JSON.stringify({ customSessionId: sessionId });\r\n            axios\r\n                .post(OPENVIDU_SERVER_URL + '/api/sessions', data, {\r\n                    headers: {\r\n                        Authorization: 'Basic ' + btoa('OPENVIDUAPP:' + OPENVIDU_SERVER_SECRET),\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                })\r\n                .then((response) => {\r\n                    console.log('CREATE SESION', response);\r\n                    resolve(response.data.id);\r\n                })\r\n                .catch((response) => {\r\n                    var error = Object.assign({}, response);\r\n                    if (error.response && error.response.status === 409) {\r\n                        resolve(sessionId);\r\n                    } else {\r\n                        console.log(error);\r\n                        console.warn(\r\n                            'No connection to OpenVidu Server. This may be a certificate error at ' + OPENVIDU_SERVER_URL,\r\n                        );\r\n                        if (\r\n                            window.confirm(\r\n                                'No connection to OpenVidu Server. This may be a certificate error at \"' +\r\n                                OPENVIDU_SERVER_URL +\r\n                                '\"\\n\\nClick OK to navigate and accept it. ' +\r\n                                'If no certificate warning is shown, then check that your OpenVidu Server is up and running at \"' +\r\n                                OPENVIDU_SERVER_URL +\r\n                                '\"',\r\n                            )\r\n                        ) {\r\n                            window.location.assign(OPENVIDU_SERVER_URL + '/accept-certificate');\r\n                        }\r\n                    }\r\n                });\r\n        });\r\n    }\r\n\r\n    const createToken = (sessionId) => {\r\n        return new Promise((resolve, reject) => {\r\n            var data = JSON.stringify({ session: sessionId });\r\n            axios\r\n                .post(OPENVIDU_SERVER_URL + '/api/tokens', data, {\r\n                    headers: {\r\n                        Authorization: 'Basic ' + btoa('OPENVIDUAPP:' + OPENVIDU_SERVER_SECRET),\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                })\r\n                .then((response) => {\r\n                    console.log('TOKEN', response);\r\n                    resolve(response.data.token);\r\n                })\r\n                .catch((error) => reject(error));\r\n        });\r\n    }\r\n\r\n    const getToken = () => {\r\n        return createSession(mySessionID).then((sessionId) => createToken(sessionId));\r\n    }\r\n\r\n    const OnClickBtn = () => {\r\n        joinSession();\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n            <div style={{\r\n\r\n        \r\n      \r\n                display: \"flex\",\r\n                flexDirection: 'column',\r\n                alignSelf:\"center\",\r\n                alignItems:\"center\",\r\n                \r\n            }}>\r\n                <div id=\"check\" >\r\n                    <Button onClick={OnClickBtn} style={{\r\n                   \r\n                    }}>세션 열기 </Button>\r\n\r\n                </div>\r\n\r\n                <div id=\"session\">\r\n                    {session !== undefined ? (\r\n                        <div id=\"session\">\r\n                            <div id=\"session-header\" style={{\r\n                                textAlign:\"center\"\r\n                            }}>\r\n                                <h1 id=\"session-title\">{mySessionID}</h1>\r\n                                <Button\r\n                                    type=\"button\"\r\n                                    id=\"buttonLeaveSession\"\r\n                                    onClick={leaveSession}\r\n                                    value=\"Leave session\">세션 닫기</Button>\r\n \r\n                            </div>\r\n\r\n                            {/*             {mainStreamManager !== undefined ? (\r\n                                <div id=\"main-video\" className=\"col-md-6\">\r\n                                    <UserVideoComponent streamManager={mainStreamManager} />\r\n                                </div>\r\n                            ) : null} */}\r\n                            <div id=\"video-container\" >\r\n                                {/* {Publisher !== undefined ? (\r\n                                    <div className=\"stream-container col-md-6 col-xs-6\" onClick={() =>handleMainVideoStream(Publisher)}>\r\n                                        <UserVideoComponent\r\n                                            streamManager={Publisher} />\r\n                                    </div>\r\n                                ) : null} */}\r\n                                {subscriber.map((sub, i) => (\r\n                                    <div key={i} onClick={() => handleMainVideoStream(sub)}>\r\n                                        <UserVideoComponent streamManager={sub} index={i} />\r\n                                    </div>\r\n                                ))}\r\n\r\n                            </div>\r\n                        </div>\r\n                    ) : null}\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default Make_Session;","import React, { useEffect, useState } from 'react';\r\n\r\nimport axios from 'axios';\r\nimport OpenViduSession from 'openvidu-react';\r\nimport { OpenVidu } from 'openvidu-browser';\r\n\r\nimport { AreaChartOutlined } from '@ant-design/icons';\r\n\r\nconst OPENVIDU_SERVER_URL = 'https://192.168.99.100:4443';\r\nconst OPENVIDU_SERVER_SECRET = 'MY_SECRET';\r\n\r\nlet OV;\r\n\r\nconst Sharing = (props) => {\r\n\r\n\r\n\r\n    const [mySessionID, setmySessionID] = useState(\"EQ0vMvWlTNQcqDYEe73E8mU9AIAOpXka\");\r\n    const [myUserName, setmyUserName] = useState(props.location.state.Id);\r\n    const [token, settoken] = useState();\r\n    const [session, setsession] = useState();\r\n    const [mainStreamManager, setmainStreamManager] = useState();\r\n    const [Publisher, setpublisher] = useState();\r\n    const [subscriber, setsubscriber] = useState([]);\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        console.log(myUserName);\r\n        window.addEventListener('beforeunload', onbeforeunload);\r\n        return (window.removeEventListener('beforeunload', onbeforeunload));\r\n        \r\n    });\r\n\r\n    useEffect(() => {\r\n        if (session) {\r\n            var mySession = session;\r\n            console.log(session);\r\n            // --- 3) Specify the actions when events take place in the session ---\r\n           \r\n            // On every new Stream received...\r\n            mySession.on('streamCreated', (event) => {\r\n\r\n        \r\n                // Subscribe to the Stream to receive it. Second parameter is undefined\r\n                // so OpenVidu doesn't create an HTML video by its own\r\n     /*            let sub = mySession.subscribe(event.stream, undefined);\r\n                let subscribers = subscriber;\r\n                subscribers.push(sub);\r\n\r\n                // Update the state with the new subscribers\r\n                setsubscriber(subscribers); */\r\n            });\r\n\r\n            // On every Stream destroyed...\r\n            mySession.on('streamDestroyed', (event) => {\r\n\r\n                // Remove the stream from 'subscribers' array\r\n                deleteSubscriber(event.stream.streamManager);\r\n            });\r\n \r\n            // --- 4) Connect to the session with a valid user token ---\r\n\r\n            // 'getToken' method is simulating what your server-side should do.\r\n            // 'token' parameter should be retrieved and returned by your own backend\r\n            getToken().then((token) => {\r\n                // First param is the token got from OpenVidu Server. Second param can be retrieved by every user on event\r\n                // 'streamCreated' (property Stream.connection.data), and will be appended to DOM as the user's nickname\r\n                mySession\r\n                    .connect(\r\n                        token,\r\n                        { clientData: myUserName },\r\n                    )\r\n                    .then(() => {\r\n\r\n                        // --- 5) Get your own camera stream ---\r\n\r\n                        // Init a publisher passing undefined as targetElement (we don't want OpenVidu to insert a video\r\n                        // element: we will manage it on our own) and with the desired properties\r\n                        let publisher = OV.initPublisher(undefined, {\r\n                            audioSource: undefined, // The source of audio. If undefined default microphone\r\n                            videoSource: \"screen\", // The source of video. If undefined default webcam\r\n                            publishAudio: false, // Whether you want to start publishing with your audio unmuted or not\r\n                            publishVideo: true, // Whether you want to start publishing with your video enabled or not\r\n                            resolution: '640x480', // The resolution of your video\r\n                            frameRate: 30, // The frame rate of your video\r\n                            insertMode: 'APPEND', // How the video is inserted in the target element 'video-container'\r\n                            mirror: false, // Whether to mirror your local video or not\r\n                        });\r\n\r\n                        // --- 6) Publish your stream ---\r\n\r\n                        mySession.publish(publisher);\r\n\r\n                        // Set the main video in the page to display our webcam and store our Publisher\r\n                        setmainStreamManager(publisher);\r\n                        setpublisher(publisher);\r\n\r\n                    })\r\n                    .catch((error) => {\r\n                        console.log('There was an error connecting to the session:', error.code, error.message);\r\n                    });\r\n            }); \r\n        }\r\n\r\n    }, [session]);\r\n\r\n    const onbeforeunload = (event) => {\r\n        leaveSession();\r\n    }\r\n\r\n    const handlerJoinSessionEvent = () => {\r\n        console.log('Join session');\r\n    }\r\n\r\n    const handlerLeaveSessionEvent = () => {\r\n        console.log('Leave session');\r\n        /* this.setState({\r\n            session: undefined,\r\n        }); */\r\n    }\r\n    const handlerErrorEvent = () => {\r\n        console.log('Leave session');\r\n    }\r\n\r\n    const handleMainVideoStream = (stream) => {\r\n        if (mainStreamManager !== stream) {\r\n            setmainStreamManager(stream);\r\n        }\r\n    }\r\n\r\n    const deleteSubscriber = (streamManager) => {\r\n        let subscribers = subscriber;\r\n        let index = subscribers.indexOf(streamManager, 0);\r\n        if (index > -1) {\r\n            subscribers.splice(index, 1);\r\n            setsubscriber(subscribers);\r\n        }\r\n    }\r\n\r\n    /*   const check = () => {\r\n          document.getElementById(\"check\").style.display = \"none\";\r\n      } */\r\n\r\n    const joinSession = (event) => {\r\n        OV = new OpenVidu();\r\n\r\n    \r\n\r\n        axios\r\n        .get(OPENVIDU_SERVER_URL + '/api/sessions/'+mySessionID, {\r\n            headers: {\r\n                Authorization: 'Basic ' + btoa('OPENVIDUAPP:' + OPENVIDU_SERVER_SECRET),\r\n                'Content-Type': 'application/json',\r\n            },\r\n        })\r\n        .then((response) => {\r\n\r\n            setsession(OV.initSession());\r\n                \r\n        }).catch((err)=> alert(\"Not yet\"));\r\n \r\n    \r\n\r\n    }\r\n    const leaveSession = () => {\r\n\r\n        // --- 7) Leave the session by calling 'disconnect' method over the Session object ---\r\n\r\n        const mySession = session;\r\n\r\n        if (mySession) {\r\n            mySession.disconnect();\r\n        }\r\n\r\n        // Empty all properties...\r\n        OV = null;\r\n        setsession();\r\n        setsubscriber([]);\r\n        setmySessionID(sessionStorage.getItem(\"sessionID\"));\r\n        setmyUserName('Professor');\r\n        setmainStreamManager(undefined);\r\n        setpublisher(undefined);\r\n\r\n    }\r\n\r\n\r\n    const createSession = (sessionId) => {\r\n        return new Promise((resolve, reject) => {\r\n            var data = JSON.stringify({ customSessionId: sessionId });\r\n            axios\r\n                .post(OPENVIDU_SERVER_URL + '/api/sessions', data, {\r\n                    headers: {\r\n                        Authorization: 'Basic ' + btoa('OPENVIDUAPP:' + OPENVIDU_SERVER_SECRET),\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                })\r\n                .then((response) => {\r\n                    console.log('CREATE SESION', response);\r\n                    resolve(response.data.id);\r\n                })\r\n                .catch((response) => {\r\n                    var error = Object.assign({}, response);\r\n                    if (error.response && error.response.status === 409) {\r\n                        resolve(sessionId);\r\n                    } else {\r\n                        console.log(error);\r\n                        console.warn(\r\n                            'No connection to OpenVidu Server. This may be a certificate error at ' + OPENVIDU_SERVER_URL,\r\n                        );\r\n                        if (\r\n                            window.confirm(\r\n                                'No connection to OpenVidu Server. This may be a certificate error at \"' +\r\n                                OPENVIDU_SERVER_URL +\r\n                                '\"\\n\\nClick OK to navigate and accept it. ' +\r\n                                'If no certificate warning is shown, then check that your OpenVidu Server is up and running at \"' +\r\n                                OPENVIDU_SERVER_URL +\r\n                                '\"',\r\n                            )\r\n                        ) {\r\n                            window.location.assign(OPENVIDU_SERVER_URL + '/accept-certificate');\r\n                        }\r\n                    }\r\n                });\r\n        });\r\n    }\r\n\r\n    const createToken = (sessionId) => {\r\n        return new Promise((resolve, reject) => {\r\n            var data = JSON.stringify({ session: sessionId });\r\n            axios\r\n                .post(OPENVIDU_SERVER_URL + '/api/tokens', data, {\r\n                    headers: {\r\n                        Authorization: 'Basic ' + btoa('OPENVIDUAPP:' + OPENVIDU_SERVER_SECRET),\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                })\r\n                .then((response) => {\r\n                    console.log('TOKEN', response);\r\n                    resolve(response.data.token);\r\n                })\r\n                .catch((error) => reject(error));\r\n        });\r\n    }\r\n\r\n    const getToken = () => {\r\n        return createSession(mySessionID).then((sessionId) => createToken(sessionId));\r\n    }\r\n\r\n    const OnClickBtn = () => {\r\n        joinSession();\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n            <div>\r\n                <div id=\"check\" >\r\n                    <button onClick={OnClickBtn}>click</button>\r\n                </div>\r\n                {Publisher !== undefined ? (\r\n                    <div className=\"stream-container col-md-6 col-xs-6\" onClick={() => this.handleMainVideoStream(Publisher)}>\r\n                        {/* <UserVideoComponent\r\n                            streamManager={Publisher} /> */}\r\n                    </div>\r\n                ) : null}\r\n\r\n            </div>\r\n\r\n\r\n        </>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default Sharing;","import React, { useState, } from 'react';\r\nimport { Alert, Button, Card, Space, Statistic, Upload } from 'antd';\r\nimport { InboxOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\n\r\nconst Examing_fin = (props) => {\r\n\r\n\r\n    const { Countdown } = Statistic\r\n    const { Dragger } = Upload;\r\n    const [fileList, setfileList] = useState([]);\r\n    const [fileList2, setfileList2] = useState([]);\r\n\r\n    const deadline = Date.now() + 5 * 60 * 1000; //\r\n\r\n    const OnFinish = () => {\r\n\r\n        console.log(\"fin\");\r\n\r\n    }\r\n\r\n    const prop1 = {\r\n        name: \"file\",\r\n        multiple: true,\r\n        action: \"http://52.79.134.9:5000/exam/student/\",\r\n        fileList,\r\n        beforeUpload: file => {\r\n\r\n            setfileList(fileList.concat(file));\r\n            return false;\r\n\r\n        },\r\n\r\n    }\r\n\r\n    const prop2 = {\r\n        name: \"file\",\r\n        multiple: true,\r\n        action: \"http://52.79.134.9:5000/exam/student/\",\r\n        fileList2,\r\n        beforeUpload: file => {\r\n\r\n            setfileList2(fileList2.concat(file));\r\n            return false;\r\n\r\n        },\r\n\r\n    }\r\n\r\n    const meta = {\r\n        eid: props.location.state.eid,\r\n        sid: props.location.state.sid,\r\n        sName: props.location.state.sName,\r\n\r\n    }\r\n\r\n    const OnRemoveFile1 = (file) => {\r\n\r\n        let tempList = [];\r\n        fileList.forEach((v) => {\r\n            tempList.push(v);\r\n        });\r\n        tempList.splice(tempList.indexOf(file), 1)\r\n        setfileList(tempList);\r\n    }\r\n    const OnRemoveFile2 = (file) => {\r\n\r\n        let tempList = [];\r\n        fileList2.forEach((v) => {\r\n            tempList.push(v);\r\n        });\r\n        tempList.splice(tempList.indexOf(file), 1)\r\n        setfileList2(tempList);\r\n    }\r\n\r\n\r\n    const UploadFile = async (e) => {\r\n        e.preventDefault();\r\n        if (fileList.length > 0 && fileList2.length > 0) {\r\n            const formData = new FormData();\r\n\r\n            fileList.forEach(file => formData.append('answer', file));\r\n            fileList2.forEach(file => formData.append('answer', file));\r\n\r\n\r\n            for (let key in meta) {\r\n                formData.append(key, meta[key]);\r\n\r\n            }\r\n\r\n            await axios.post('http://52.79.134.9:5000/exam/student', formData, {\r\n                header: { 'Content-Type': 'multipart/form-data' }\r\n            },\r\n            ).then((res) => {\r\n                if (res.data.message === 'Create_success') {\r\n\r\n                    props.hitory.push(\"/End\")\r\n                } else if (res.data.message === 'already sibmit') {\r\n                    alert(\"이미 제출 했습니다!\");\r\n                }\r\n\r\n            }).catch((err) => alert(err));\r\n        } else {\r\n            alert(\"파일을 등록해주세요!\");\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{\r\n\r\n                backgroundColor: \"gray\",\r\n                width: \"100vw\",\r\n                height: \"100vh\",\r\n                display: \"flex\",\r\n                flexDirection: 'column',\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\"\r\n            }}>\r\n\r\n\r\n\r\n\r\n\r\n                <div>\r\n                    <Card title=\"시험 종료\" style={{\r\n                        textAlign: \"center\",\r\n                        width: \"100%\"\r\n                    }}\r\n                        actions={[\r\n                            <Button onClick={UploadFile}>제출</Button>\r\n                        ]}>\r\n                        <Countdown value={deadline} onFinish={OnFinish} />\r\n                        <p>\r\n                            <br></br>\r\n                            수고하셨습니다\r\n                        </p>\r\n                        <p>\r\n                            작성한 답안지와 타임랩스 파일을 제출해주세요\r\n                        </p>\r\n                        <Space>\r\n                            <Dragger {...prop1} onRemove={OnRemoveFile1}>\r\n                                <p>\r\n                                    <InboxOutlined />\r\n                                </p>\r\n                                <p>\r\n                                    타임랩스 파일을 드래그하여 등록하세요\r\n                                </p>\r\n                            </Dragger>\r\n                            <Dragger {...prop2} onRemove={OnRemoveFile2}>\r\n                                <p>\r\n                                    <InboxOutlined />\r\n                                </p>\r\n                                <p>\r\n                                    답안 파일을 드래그하여 등록하세요\r\n                                </p>\r\n                            </Dragger>\r\n\r\n                        </Space>\r\n\r\n\r\n                    </Card>\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Examing_fin;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport 'url-search-params-polyfill';\r\nimport \"../../node_modules/antd/dist/antd.css\"\r\nimport { Layout, Typography } from 'antd';\r\nimport { Form, Input, Button, Card } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\nconst LoginComp = (props) => {\r\n\r\n\r\n  const { Text } = Typography;\r\n\r\n\r\n  const [username, setusername] = useState('');\r\n  const [password, setpassword] = useState('');\r\n\r\n\r\n\r\n\r\n  /*   var params = new URLSearchParams();\r\n    params.append('user', username);\r\n    params.append('pass', password); */\r\n\r\n  const OnClick = async () => {\r\n    /* axios.get('/api-login/login')\r\n    .then(res => {\r\n      setdata(res.data);\r\n    }) */\r\n    if (username && password) {\r\n      await axios.post('http://52.79.134.9:5000/user/login', {\r\n        user: username,\r\n        pass: password\r\n      },\r\n        { withCredentials: true }\r\n      ).then((res) => {\r\n        console.log(res.data);\r\n\r\n        sessionStorage.setItem('sessionID', res.data.sessionID);\r\n        sessionStorage.setItem('userID', res.data.userId);\r\n        sessionStorage.setItem('isLogged', res.data.isLogged);\r\n\r\n        if (res.data.message === 'login success') {\r\n          props.history.push(\"/Main\");\r\n        }\r\n        console.log(res);\r\n\r\n        // if(res.data.message==='login success'){\r\n        //     props.history.push(\"/Main\");\r\n        // }     \r\n      }).catch((err) => alert(err));\r\n\r\n    } else {\r\n      alert(\"input please\")\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  const OnChangeUserName = (e) => {\r\n    setusername(e.target.value);\r\n  }\r\n\r\n  const OnChangePassWord = (e) => {\r\n    setpassword(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={{\r\n\r\n        backgroundColor: \"gray\",\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n        alignItems: \"center\",\r\n        alignSelf:\"center\",\r\n        justifyContent: \"center\"\r\n      }}>\r\n        <div style={{\r\n          textAlign: \"center\"\r\n        }}>\r\n          <Card>\r\n\r\n          <div>\r\n            <Text style={{\r\n              fontSize: 30,\r\n              fontWeight: 700,\r\n            }}><LockOutlined />Login</Text>\r\n          </div>\r\n          <div className=\"LoginScreen\">\r\n            <Form>\r\n              <Form.Item name=\"username\" rules={[{ required: true, message: '아이디를 입력하세요!' }]}>\r\n                <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"아이디\" value={username} onChange={OnChangeUserName}></Input>\r\n              </Form.Item>\r\n              <Form.Item name=\"password\" rules={[{ required: true, message: '비밀번호를 입력하세요!' }]}>\r\n                <Input.Password prefix={<LockOutlined className=\"site-form-item-icon\" />} placeholder=\"비밀번호\" value={password} onChange={OnChangePassWord}></Input.Password>\r\n              </Form.Item>\r\n\r\n              <Form.Item>\r\n                <Button type=\"secondary\" htmlType=\"submit\" className=\"LoginBtn\" onClick={OnClick}>로그인</Button>\r\n              </Form.Item>\r\n              <Text style={{\r\n                float: \"left\",\r\n              }}>or <Link to=\"./Register\">회원가입</Link></Text>\r\n            </Form>\r\n          </div>\r\n\r\n          </Card>\r\n\r\n        </div>\r\n\r\n        \r\n          <Link to='/EnterExam_Student'>Goto Exam</Link>\r\n        \r\n      </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginComp;\r\n","import React, { useState, memo, useEffect } from 'react';\r\nimport { Form, Button, PageHeader, Input, Row, Col, Menu } from 'antd'\r\nimport axios from 'axios';\r\nimport { HomeOutlined, VideoCameraAddOutlined, FileAddOutlined, VideoCameraOutlined,CheckOutlined } from '@ant-design/icons';\r\n\r\n\r\nimport {\r\n\r\n    Link,\r\n    useLocation,\r\n} from 'react-router-dom';\r\n\r\n\r\nconst SideMenu = memo(() => {\r\n\r\n    const location = useLocation();\r\n    const MenuName = [\"홈\", \"시험 등록\", \"시험장 입장\",\"시험결과 확인\"];\r\n    const icons = [<HomeOutlined />, <FileAddOutlined />, <VideoCameraOutlined />,<CheckOutlined />];\r\n    const Links = [\"/Main\", \"/Main/1\", \"/Main/2\",\"/Main/3\"];\r\n    const [selectedKey, setselectedKey] = useState(\"0\");\r\n   \r\n\r\n\r\n    /*    useEffect(()=>{\r\n           document.getElementById(\"시험장 입장-관리\").className=\"ant-menu-item ant-menu-item-disabled\";\r\n       },[]); */\r\n\r\n    useEffect(() => {\r\n        console.log(location);\r\n        let index = Links.findIndex((v) => {\r\n            return (v === location.pathname);\r\n        });\r\n        setselectedKey(String(index));\r\n    }, [location]);\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {/* <div className=\"logo\"/> */}\r\n\r\n            <Menu mode=\"inline\" theme=\"dark\" selectedKeys={[selectedKey]} >\r\n\r\n                 {\r\n                    MenuName.map((v, i) => {\r\n                        return <Menu.Item key={i} icon={icons[i]} id={v} > <Link to={Links[i]}>{v}</Link></Menu.Item>;\r\n                    })\r\n                }\r\n \r\n                {/* <Menu.Item key={0} icon={icons[0]}> \r\n                    <Link to={Links[0]}>{MenuName[0]}</Link>\r\n                </Menu.Item>\r\n                <Menu.Item key={1} icon={icons[1]}> \r\n                    <Link to={Links[1]}>{MenuName[1]}</Link>\r\n                </Menu.Item>\r\n                <Menu.Item key={2} icon={icons[2]} > \r\n                    <Link to={Links[2]}>{MenuName[2]}</Link>\r\n                </Menu.Item> */}\r\n\r\n\r\n            </Menu>\r\n\r\n\r\n        </>\r\n    );\r\n});\r\n\r\nexport default SideMenu;","import React from 'react';\r\nimport { Typography, Divider, Skeleton, Avatar, Space, Result } from 'antd'\r\n\r\nconst Home = () => {\r\n    const { Title, Text } = Typography;\r\n\r\n    return (\r\n        <>\r\n            <Space style={{\r\n                paddingTop: 20,\r\n                paddingLeft: 20,\r\n            }}>\r\n                <Text style={{\r\n                    fontWeight: \"bold\",\r\n                    fontSize: 20,\r\n                }}><Text type=\"warning\">Rope</Text>에 오신걸 환영합니다!</Text>\r\n               \r\n            </Space>\r\n            <Divider></Divider>\r\n\r\n            <div className=\"Content\" style={{ margin: 20 }}>\r\n                <Result\r\n                status=\"404\"\r\n                title=\"아직 개발중인 작업입니다!\"\r\n                subTitle=\"조금 더 완벽한 서비스를 위해 기다려주세요\">\r\n                    \r\n               </Result>\r\n            </div>\r\n            <Divider></Divider>\r\n            <div style={{ paddingLeft: 5 , paddingBottom :20}} className=\"space-align-container\">\r\n                <Text code>제공자</Text>\r\n                <Avatar src=\"https://lh3.googleusercontent.com/ogw/ADGmqu8uPjReaS9H1M_C5UabkgioDOBDcDFM0E2MGa8H=s83-c-mo\"></Avatar>\r\n                <Avatar src=\"https://scontent-gmp1-1.xx.fbcdn.net/v/t1.0-9/117035716_3183548191766547_183287540202193355_n.jpg?_nc_cat=104&_nc_sid=09cbfe&_nc_ohc=tT2IyCRyMHAAX-81589&_nc_ht=scontent-gmp1-1.xx&oh=54ec351277fb364144c3ae023eac6673&oe=5F733C8E\"></Avatar>\r\n            </div>\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { useState, memo } from 'react';\r\nimport { Form, Input, Button, Typography, Divider, TimePicker, Upload, message } from 'antd';\r\nimport { InboxOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport {\r\n    Link,\r\n\r\n} from 'react-router-dom';\r\n\r\nconst AddTest = memo((prop) => {\r\n    const { Dragger } = Upload;\r\n    const { Text } = Typography;\r\n    const { TextArea } = Input;\r\n    const { RangePicker } = TimePicker;\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n    const [fileName, setfileName] = useState('');\r\n    const [fileWarn, setfileWarn] = useState('');\r\n    const [fileTime, setfileTime] = useState(0);\r\n    const [Times, setTimes] = useState();\r\n    const [disabledBtn, setdisabledBtn] = useState(true);\r\n\r\n    const [timestring, settimestring] = useState([]);\r\n\r\n\r\n    const meta = {\r\n        fileName: fileName,\r\n        contents: fileWarn,\r\n        time: fileTime,\r\n        userID: sessionStorage.getItem(\"userID\"),\r\n        sessionID: sessionStorage.getItem(\"sessionID\"),\r\n        isLogged: sessionStorage.getItem(\"isLogged\"),\r\n    }\r\n\r\n    const layout = {\r\n        labelCol: { span: 8 },\r\n        wrapperCol: { span: 10 },\r\n    }\r\n\r\n\r\n    const Buttonlayout = {\r\n        wrapperCol: { offset: 8, span: 4 },\r\n    }\r\n\r\n    const Open = (e) => {\r\n        e.preventDefault();\r\n        setfileName('');\r\n        setfileWarn('');\r\n        setTimes('');\r\n        setFileList([]);\r\n        setdisabledBtn(false);\r\n    }\r\n\r\n    const UploadFile =async(e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        fileList.forEach(file => formData.append('files', file));\r\n\r\n        for (let key in meta) {\r\n            formData.append(key, meta[key]);\r\n        }\r\n\r\n        await axios.post('http://52.79.134.9:5000/api-session/create', formData, {\r\n            header: { 'Content-Type': 'multipart/form-data' }\r\n        },\r\n        ).then((res) => {\r\n   \r\n            if (res.data.message === 'create_success') {\r\n                alert(\"파일 업로드 성공!\");\r\n                Open(e);\r\n                \r\n            }if (res.data.message === 'create exam fail') {\r\n                alert(\"이미 존재하는 파일입니다!\");\r\n            }\r\n\r\n\r\n        }).catch((err) => alert(err));\r\n    }\r\n\r\n    const OnClickBtn = (e) => {\r\n        /* if (fileName && fileWarn && fileTime !== 0 && fileList.length !== 0) {\r\n            UploadFile();\r\n        } else {\r\n            alert(\"양식을 입력해주세요!\");\r\n        } */\r\n        UploadFile(e);\r\n    }\r\n\r\n\r\n    const props = {\r\n        name: \"file\",\r\n        multiple: true,\r\n        action: \"http://52.79.134.9:5000/api-session/create/\",\r\n        beforeUpload: file => {\r\n\r\n            setFileList(fileList.concat(file));\r\n            return false;\r\n\r\n        },\r\n     \r\n        onChange(info) {\r\n            const { status } = info.file;\r\n            /*             if (status !== 'uploading') {\r\n                          console.log(info.file, info.fileList);\r\n            \r\n                        } */\r\n            /*             if(status==='removed'){\r\n                            setFileList(fileList.splice(fileList.indexOf(info.file),1))\r\n                        } */\r\n            if (status === 'done') {\r\n                message.success(`${info.file.name} file uploaded successfully.`);\r\n            } else if (status === 'error') {\r\n                message.error(`${info.file.name} file upload failed.`);\r\n            }\r\n        },\r\n    }\r\n\r\n    const OnRemoveFile = (file) => {\r\n        console.log(file);\r\n        let tempList = [];\r\n        fileList.forEach((v) => {\r\n            tempList.push(v);\r\n        });\r\n        tempList.splice(tempList.indexOf(file), 1)\r\n        setFileList(tempList);\r\n    }\r\n\r\n    const OnChangeFileName = (e) => {\r\n        setfileName(e.target.value);\r\n    }\r\n    const OnChangeFileWarn = (e) => {\r\n        setfileWarn(e.target.value);\r\n    }\r\n    const OnChangeFileTime = (time, timeString) => {\r\n        setTimes(time);\r\n        settimestring(timeString);\r\n        setfileTime(Math.round(moment.duration(time[1].diff(time[0])).asSeconds()));\r\n        console.log(timeString)\r\n        //console.log(Math.ceil(moment.duration(time[1].diff(time[0])).asMinutes()));\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <div style={{\r\n                    padding: 20\r\n                }}>\r\n                    <Text strong style={{\r\n                        fontSize: 20,\r\n                    }}>\r\n                        시험 등록\r\n                        </Text>\r\n                    <Divider></Divider>\r\n                </div>\r\n                <div>\r\n                    <Form>\r\n\r\n                        <Form.Item {...layout} label=\"시험 제목\">\r\n                            <Input placeholder=\"등록할 시험의 제목을 입력하세요\" value={fileName} onChange={OnChangeFileName}></Input>\r\n                        </Form.Item>\r\n                        <Form.Item {...layout} label=\"시험 주의사항\">\r\n                            <TextArea rows={4} placeholder=\"시험시 주의 사항을 입력해 주세요\" value={fileWarn} onChange={OnChangeFileWarn}></TextArea>\r\n                        </Form.Item>\r\n                        <Form.Item {...layout} label=\"시험 시간\">\r\n                            <RangePicker order=\"true\" onChange={OnChangeFileTime} value={Times}></RangePicker>\r\n                        </Form.Item>\r\n                        <Form.Item {...layout} label=\"문제 파일\">\r\n                            <Dragger {...props} onRemove={OnRemoveFile}>\r\n                                <p>\r\n                                    <InboxOutlined />\r\n                                </p>\r\n                                <p>\r\n                                    이곳에 파일을 드래그하여 등록하세요\r\n                                </p>\r\n                            </Dragger>\r\n                        </Form.Item>\r\n                        <Form.Item {...Buttonlayout}>\r\n                            <Button  onClick={OnClickBtn} disabled={!disabledBtn}>등록</Button>\r\n\r\n                        </Form.Item>\r\n                        <Form.Item {...Buttonlayout}>\r\n                            <Button style={{\r\n\r\n                                marginBottom: 30,\r\n                            }} onClick={Open} disabled={disabledBtn}><Link to=\"/Main/2\">시험 시작</Link></Button>\r\n\r\n                        </Form.Item>\r\n\r\n                    </Form>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default AddTest;","import React, { useRef,useEffect } from 'react';\r\n\r\n\r\nconst OpenViduVideoComponent=(props)=>{\r\n    \r\n    const videoRef=useRef();\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        if(props.streamManager && props.index){\r\n            \r\n            if(props.index>0){\r\n                props.streamManager[props.index-1].addVideoElement(videoRef.current); \r\n            }\r\n            \r\n         \r\n        }\r\n    },[]);\r\n\r\n    return(\r\n\r\n        <>\r\n        {props.index>0 ? <video autoPlay ref={videoRef} /> : null}\r\n        \r\n\r\n        </>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default OpenViduVideoComponent;","import React, { useEffect, useState } from 'react';\r\nimport OpenViduVideoComponent from './OvVideo';\r\n\r\nconst UserVideoComponent = (props) => {\r\n\r\n    const [NickName, setNickName] = useState();\r\n\r\n    const getNicknameTag=()=> {\r\n        // Gets the nickName of the user\r\n         /* setNickName(JSON.parse(props.streamManager[props.index-1].stream.connection.data).clientData);  */\r\n        console.log(props.index);\r\n        if(props.index>0){\r\n            setNickName(JSON.parse(props.streamManager[props.index-1].stream.connection.data).clientData);\r\n        }\r\n         //console.log((props.streamManager[props.index].stream)); \r\n    }\r\n\r\n    useEffect(()=>{\r\n        getNicknameTag();\r\n    },[NickName]);\r\n\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n            <div>\r\n                {props.streamManager !== undefined ? (\r\n                    <div className=\"streamcomponent\">\r\n                        <OpenViduVideoComponent streamManager={props.streamManager} index={props.index}/>\r\n                        <div><p>{NickName}</p></div>\r\n                    </div>\r\n                ) : null}\r\n            </div>\r\n\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default UserVideoComponent;\r\n","import React, { useState, memo, useEffect } from 'react';\r\nimport { Button, Input, Form, Table } from 'antd'\r\nimport axios from 'axios';\r\nimport '../css/index.css'\r\n\r\nconst Result = () => {\r\n\r\n    const [eid, seteid] = useState(0);\r\n    const [mySessionID, setmySessionID] = useState(sessionStorage.getItem(\"sessionID\"));\r\n    const [Visible, setVisible] = useState(false);\r\n    const [data, setdata] = useState([]);\r\n\r\n    const getData = async () => {\r\n        await axios.get('http://52.79.134.9:5000/exam/get/' + mySessionID, {})\r\n            .then((res) => {\r\n                console.log(res.data[0].content);\r\n\r\n                seteid(res.data[0].eid);\r\n\r\n\r\n            }).catch((err) => alert(err));\r\n    }\r\n\r\n    const Setdata=(data)=>{\r\n        let temp=[];\r\n        data.map((v,i)=>{\r\n            temp.push({\r\n                key : i,\r\n                sid : v.sid,\r\n                name : v.sName,\r\n                time : v.cam_file,\r\n                answer : v.result_file,\r\n            });\r\n        });\r\n        console.log(temp);\r\n        setdata(temp);\r\n    }\r\n\r\n    const getStudentData = async () => {\r\n        console.log(eid);\r\n        await axios.get('http://52.79.134.9:5000/exam/result/' + eid, {})\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                if (res.data.message === 'there is no student') {\r\n                    alert(\"학생이 존재하지 않습니다!\");\r\n                } else {\r\n                    setVisible(true);\r\n                    Setdata(res.data);\r\n                }\r\n\r\n            }).catch((err) => alert(err));\r\n    }\r\n\r\n\r\n    const OnClickBtn = () => {\r\n\r\n        getData();\r\n    }\r\n\r\n    const OnClickShowBtn = () => {\r\n        if (eid === 0) {\r\n            alert(\"시험 데이터와 연동을 먼저해주세요!\");\r\n        } else {\r\n\r\n            getStudentData();\r\n\r\n        }\r\n\r\n    }\r\n    const columns = [\r\n         {\r\n            title: '학번',\r\n            dataIndex: 'sid',\r\n            width: 150,\r\n            align : 'center'\r\n        },\r\n        {\r\n            title: '이름',\r\n            dataIndex: 'name',\r\n            width: 150,\r\n            align : 'center'\r\n        },\r\n       \r\n        {\r\n            title: '타임랩스',\r\n            dataIndex: 'time',\r\n            width: 150,\r\n            align : 'center',\r\n            render: (text) => <a href={\"/uploads/answers/\"+text} download>{text}</a>\r\n        },\r\n        {\r\n            title: '답안파일',\r\n            dataIndex: 'answer',\r\n            width: 150,\r\n            align : 'center',\r\n            render: (text) => <a href={\"/uploads/answers/\"+text} download>{text}</a>\r\n        },\r\n    ];\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            <div style={{\r\n\r\n\r\n                \r\n\r\n                flexDirection: 'column',\r\n                alignItems: \"center\",\r\n\r\n\r\n            }}>\r\n                {/* <a href=\"/uploads/answers/1600341729183.pdf\" download>download</a> */}\r\n                <Button onClick={OnClickBtn}>데이터 연동</Button>\r\n                <Button onClick={OnClickShowBtn}>시험 결과 조회</Button>\r\n\r\n                {Visible ?\r\n\r\n                    <div style={{\r\n                       \r\n                        margin:15\r\n                    }}>\r\n                        <Table columns={columns} pagination={{ pageSize: 50 }} scroll={{ y: 240 }} dataSource={data}></Table>\r\n\r\n                    </div> : null}\r\n            </div>\r\n        </>\r\n\r\n\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default Result;","import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n\r\n  Route,\r\n  Link,\r\n\r\n  \r\n} from 'react-router-dom';\r\n\r\n\r\nimport \"../../node_modules/antd/dist/antd.css\"\r\nimport { Button, Menu } from 'antd';\r\n\r\nimport {TeamOutlined} from '@ant-design/icons';\r\nimport { Layout, Typography } from 'antd';\r\nimport '../css/App.css'\r\nimport SideMenu from './SideMenu';\r\nimport Home from './Home';\r\nimport AddTest from './AddTest';\r\n\r\nimport Make_Session from './Make_Session';\r\nimport Result from './Result';\r\n\r\nconst Main = ({match, location, history}) => {\r\n\r\n  const [data, setdata] = useState([]);\r\n\r\n  const { Header, Footer, Sider, Content } = Layout;\r\n  const { SubMenu } = Menu;\r\n  const { Title, Text } = Typography;\r\n\r\n\r\n  const [collapsed, setcollapsed] = useState(false);\r\n\r\n\r\n  const onCollapse = () => {\r\n    console.log(collapsed);\r\n    if (collapsed === true) {\r\n      setcollapsed(false);\r\n    } else {\r\n      setcollapsed(true);\r\n    }\r\n  }\r\n\r\n  const OnClickLogout = async() => {\r\n    /* axios.get('/api-login/login')\r\n    .then(res => {\r\n      setdata(res.data);\r\n    }) */\r\n/*     await axios.delete('/api/sessions/'+sessionStorage.getItem('sessionID'), {},\r\n    { withCredentials: true }\r\n    ).then(res => {\r\n      \r\n    }); */\r\n\r\n\r\n      await axios.post('http://52.79.134.9:5000/user/logout', {},\r\n      { withCredentials: true }\r\n      ).then(res => {\r\n        sessionStorage.setItem('sessionID',undefined);\r\n        sessionStorage.setItem('userID',undefined);\r\n        sessionStorage.setItem('isLogged',false);\r\n        history.push(\"/\");\r\n      });\r\n         \r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n \r\n        <Layout style={{ minHeight: '100vh' }}>\r\n\r\n          <Header>\r\n            <Text className=\"Logo\">\r\n              <Link to=\"/Main\" style={{\r\n                color: \"white\"\r\n              }}><TeamOutlined/>Rope</Link>\r\n            </Text>\r\n            <Text className=\"subLogo\">\r\n              &nbsp; @Rude_zoo @hyowii\r\n                    </Text>\r\n              \r\n              <Button id=\"logoutbtn\" type=\"primary\" onClick={OnClickLogout}>Logout</Button>\r\n\r\n\r\n          </Header>\r\n\r\n\r\n\r\n          <Layout>\r\n\r\n            <Sider collapsible collapsed={collapsed} onCollapse={onCollapse}>\r\n                <SideMenu match={match} ></SideMenu>\r\n            </Sider>\r\n            <Layout>\r\n\r\n\r\n              <Content className=\"Site-Content\">\r\n\r\n                <div className=\"site-layout-content\">\r\n                \r\n                      <Route exact path={match.path} component={Home}></Route>\r\n                      <Route path={`${match.path}/1`} component={AddTest}></Route>\r\n                      <Route path={`${match.path}/2`} component={Make_Session}></Route>\r\n                      <Route path={`${match.path}/3`} component={Result}></Route>\r\n                \r\n\r\n\r\n                </div>\r\n\r\n              </Content>\r\n              <Footer style={\r\n                {\r\n                  textAlign: \"center\"\r\n                }\r\n              }>Web Design ©2020 Created by Rude zoo</Footer>\r\n            </Layout>\r\n\r\n          </Layout>\r\n\r\n        </Layout>\r\n\r\n  \r\n    </>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React, { useState, memo, useEffect } from 'react';\r\nimport { Form, Input, Button, Card, Typography, Divider, Space } from 'antd';\r\nimport { LeftOutlined } from '@ant-design/icons';\r\nimport {\r\n    Link,\r\n} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst RegisterComp = memo((props) => {\r\n    const { Text } = Typography;\r\n\r\n    const [Passwrd, setPasswrd] = useState('');\r\n    const [PasswrdCheck, setPasswrdCheck] = useState('');\r\n    const [Correct, setCorrect] = useState('');\r\n    const [CheckedList, setCheckedList] = useState([]);\r\n\r\n    const [Id, setId] = useState('');\r\n    const [Name, setName] = useState('');\r\n    const [Email, setEmail] = useState('');\r\n\r\n    const [IdIn, setIdIn] = useState('');\r\n    const [passIn, setpassIn] = useState('');\r\n    const [NameIn, setNameIn] = useState('');\r\n    const [EmailIn, setEmailIn] = useState('');\r\n    //const [CheckIn, setCheckIn] = useState();\r\n\r\n    const layout = {\r\n        labelCol: { span: 8 },\r\n        wrapperCol: { span: 10 },\r\n    }\r\n\r\n    const Buttonlayout = {\r\n        wrapperCol: { offset: 8, span: 10 },\r\n    }\r\n\r\n\r\n\r\n\r\n    const onChangePasswd = (e) => {\r\n        setPasswrd(e.target.value);\r\n    }\r\n\r\n    const onChangePasswdCheck = (e) => {\r\n\r\n        setPasswrdCheck(e.target.value);\r\n    }\r\n\r\n    /*  const onChangeCheckedList = (checkedlist) => {\r\n         if (checkedlist.length < 2) {\r\n             setCheckedList(checkedlist);\r\n         }\r\n \r\n     } */\r\n\r\n    const OnchangeId = (e) => {\r\n        setId(e.target.value);\r\n    }\r\n    const OnchangeName = (e) => {\r\n        setName(e.target.value);\r\n    }\r\n    const OnchangeEmail = (e) => {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n\r\n    const OnClickBtn = async () => {\r\n        if (Id === '') {\r\n            setIdIn('아이디를 입력하세요!');\r\n        } else {\r\n            setIdIn('');\r\n        }\r\n        if (Passwrd === '') {\r\n            setpassIn('비밀번호를 입력하세요!');\r\n        } else {\r\n            setpassIn('');\r\n        }\r\n\r\n        if (Name === '') {\r\n            setNameIn('이름 입력하세요!');\r\n        } else {\r\n            setNameIn('');\r\n        }\r\n        if (Email === '') {\r\n            setEmailIn('이메일을 입력하세요!');\r\n        } else {\r\n            setEmailIn('');\r\n        }\r\n\r\n        await axios.post('http://52.79.134.9:5000/user/join', {\r\n            userId: Id,\r\n            pass: Passwrd,\r\n            email: Email,\r\n            name: Name,\r\n\r\n        },\r\n            { withCredentials: true }\r\n        ).then(res => {\r\n            if (res.data.message === 'join fail') {\r\n                alert(\"이미 등록된 사용자입니다\");\r\n            }\r\n            if (res.data.message === 'join success') {\r\n                alert(\"가입성공!\");\r\n                props.history.push(\"/\");\r\n            }\r\n\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (Passwrd !== '' && PasswrdCheck !== '') {\r\n            if (PasswrdCheck === Passwrd) {\r\n                setCorrect('위와 일치합니다');\r\n            } else {\r\n                console.log(Passwrd);\r\n                console.log(PasswrdCheck);\r\n                setCorrect('위와 일치하지 않습니다');\r\n            }\r\n        }\r\n\r\n    }, [Passwrd, PasswrdCheck]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div style={{\r\n\r\n                backgroundColor: \"gray\",\r\n                width: \"100vw\",\r\n                height: \"100vh\",\r\n                display: \"flex\",\r\n                flexDirection: 'column',\r\n                alignItems: \"center\",\r\n                alignSelf: \"center\",\r\n                justifyContent: \"center\"\r\n            }}>\r\n                <Card style={{\r\n                    width:\"40%\"\r\n                }}>\r\n                    <div style={{\r\n                        padding: 20,\r\n                    }}>\r\n                        <Text style={{\r\n                            fontSize: 25,\r\n                            color: \"#120338\",\r\n                        }}>\r\n                            <Link to=\"/\" style={{\r\n                                color: \"black\"\r\n                            }}><LeftOutlined></LeftOutlined></Link>\r\n                    &nbsp;\r\n                        회원가입\r\n                    </Text>\r\n                        <Divider />\r\n                    </div>\r\n\r\n                    <div className=\"SignupForm\">\r\n                        <Form style={{\r\n\r\n                        }}>\r\n                            <Form.Item {...layout} label=\"아이디\">\r\n                                <Space>\r\n                                    <Input placeholder=\"아이디를 입력하세요\" value={Id} onChange={OnchangeId}></Input>\r\n                                </Space>\r\n                                <div style={{\r\n                                    color: \"red\",\r\n                                }}>\r\n                                    {IdIn}\r\n                                </div>\r\n\r\n                            </Form.Item>\r\n                            <Form.Item {...layout} label=\"패스워드\">\r\n                                <Input.Password placeholder=\"패스워드를 입력하세요\" onChange={onChangePasswd} value={Passwrd} />\r\n                                <div style={{\r\n                                    color: \"red\",\r\n                                }}>\r\n                                    {passIn}\r\n                                </div>\r\n\r\n                            </Form.Item>\r\n                            <Form.Item {...layout} label=\"패스워드 확인\">\r\n                                <Input.Password placeholder=\"위에 작성한 패스워드를 입력하세요\" onChange={onChangePasswdCheck} value={PasswrdCheck} />\r\n                                {Correct}\r\n                            </Form.Item>\r\n                            {/* <Form.Item {...layout} label=\"계정 종류\" style={{\r\n                            marginBottom: 0,\r\n                        }}>\r\n                            <Form.Item valuePropName=\"checked\">\r\n                                <Checkbox.Group options={options} onChange={onChangeCheckedList} value={CheckedList}></Checkbox.Group>\r\n                                <div style={{\r\n                                    color: \"red\",\r\n                                }}>\r\n                                    {CheckIn}\r\n                                </div>\r\n                            </Form.Item>\r\n\r\n\r\n                        </Form.Item> */}\r\n\r\n                            <Form.Item {...layout} label=\"이름\">\r\n                                <Input placeholder=\"이름을 입력하세요\" value={Name} onChange={OnchangeName}></Input>\r\n                                <div style={{\r\n                                    color: \"red\",\r\n                                }}>\r\n                                    {NameIn}\r\n                                </div>\r\n\r\n                            </Form.Item>\r\n\r\n                            <Form.Item {...layout} label=\"이메일\">\r\n                                <Input placeholder=\"이메일을 입력하세요\" value={Email} onChange={OnchangeEmail}></Input>\r\n                                <div style={{\r\n                                    color: \"red\",\r\n                                }}>\r\n                                    {EmailIn}\r\n                                </div>\r\n\r\n                            </Form.Item>\r\n\r\n\r\n                            <Form.Item {...Buttonlayout}>\r\n                                <Button size=\"large\" type=\"secondary\" htmlType=\"submit\" className=\"LoginBtn\" onClick={OnClickBtn} style={{\r\n                                    marginBottom: 30,\r\n                                    width:\"100%\"\r\n                                }}>가입</Button>\r\n                            </Form.Item>\r\n\r\n\r\n\r\n                        </Form>\r\n                    </div>\r\n                </Card>\r\n\r\n\r\n            </div>\r\n\r\n        </>\r\n    );\r\n});\r\n\r\nexport default RegisterComp;","import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nimport {\r\n  BrowserRouter,\r\n  Route,\r\n  Link,\r\n  Switch,\r\n  useLocation,\r\n  HashRouter\r\n} from 'react-router-dom';\r\nimport End from './End';\r\n\r\n\r\nimport EnterExam_Student from './EnterExam_Student';\r\nimport Examing from './Examing';\r\nimport Examing_fin from './Examing_fin';\r\nimport LoginComp from './LoginComponent';\r\nimport Main from './Main';\r\nimport RegisterComp from './RegisterComponent';\r\nimport Sharing from './Sharing';\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={LoginComp}></Route>\r\n            <Route path=\"/Main\" component={Main}></Route>\r\n            <Route path=\"/Register\" component={RegisterComp}></Route>\r\n            <Route path=\"/Examing\" component={Examing}></Route>\r\n            <Route path=\"/EnterExam_Student\" component={EnterExam_Student}></Route>\r\n            <Route path=\"/Sharing\" component={Sharing}></Route>\r\n            <Route path=\"/Examing_fin\" component={Examing_fin}></Route>\r\n            <Route path=\"/End\" component={End}></Route>\r\n            \r\n          </Switch>\r\n          \r\n       \r\n      </BrowserRouter>\r\n    </>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Component/App';\r\n\r\nReactDOM.render(\r\n  <div>\r\n    <App/>\r\n  </div>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}